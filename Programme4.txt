.include beta.uasm
.include intio.uasm
.options tty
	CMOVE(pile,SP)
	BR(main)
data:
res:	LONG(null)	| int res;
main:
	PUSH(BP);
	PUSH(BP);
	MOVE(SP, BP);
	PUSH(BP);
	MOVE(SP, BP);
	POP(R1)
	POP(R2)
	ADD(R1,R2,R0)
	PUSH(R0)
	PUSH(BP);
	MOVE(SP, BP);
	POP(R1)
	POP(R2)
	MUL(R1,R2,R0)
	PUSH(R0)
	PUSH(BP);
	MOVE(SP, BP);
section .bss
    input resb 100  
    global _start

_start:
    MOV (rax, 0) 
    MOV (rdi, 0)  
    MOV (rsi, input) 
    MOV (rdx, 100) 
    syscall
    MOV (R0,rax)
   PUSH (R0)
	PUSH(BP);
	MOVE(SP, BP);
	LDR(R0,2)
	PUSH(R0)
	PUSH(BP);
	MOVE(SP, BP);
	POP(R1)
	POP(R2)
	DIV(R1,R2,R0)
	PUSH(R0)
	PUSH(BP);
	MOVE(SP, BP);
	POP(R1)
	POP(R2)
	SUB(R1,R2,R0)
	PUSH(R0)
	PUSH(BP);
	MOVE(SP, BP);
section .bss
    input resb 100  
    global _start

_start:
    MOV (rax, 0) 
    MOV (rdi, 0)  
    MOV (rsi, input) 
    MOV (rdx, 100) 
    syscall
    MOV (R0,rax)
   PUSH (R0)
	PUSH(BP);
	MOVE(SP, BP);
	LDR(R0,5)
	PUSH(R0)
	PUSH(BP);
	MOVE(SP, BP);
	LDR(R0,3)
	PUSH(R0)
	PUSH(BP);
	MOVE(SP, BP);
	LDR(R0,x)
	PUSH(R0)
	POP(R0)
	WRINT()
}
pile :
